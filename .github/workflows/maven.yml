name: Java CI with Maven and Documentation Generation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven
      run: mvn -B compile --file pom.xml
      
    - name: Run unit and integration tests
      run: mvn -B test --file pom.xml -Dtest.profile=parallel
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: target/surefire-reports/

  documentation-generation:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install system dependencies
      run: |
        # Update package lists
        sudo apt-get update
        
        # Install basic dependencies and updated package names for Ubuntu 24.04
        sudo apt-get install -y \
          xvfb \
          pandoc \
          wget \
          unzip \
          fonts-liberation \
          libasound2t64 \
          libatk-bridge2.0-0 \
          libatk1.0-0 \
          libdrm2 \
          libxcomposite1 \
          libxdamage1 \
          libxrandr2 \
          libxss1 \
          libgtk-3-0 \
          libgbm1 \
          xdg-utils
        
        echo "✅ System dependencies installed successfully"
        
    - name: Compile application
      run: mvn -B compile --file pom.xml
      
    - name: Generate Playwright documentation with headless mode
      run: |
        echo "🚀 Generating user documentation with Playwright..."
        # Set up virtual display for headless browser testing
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
        # Wait for Xvfb to start
        sleep 3
        
        # Check available browsers and system info
        echo "📋 System information:"
        uname -a
        echo "🖥️ Display: $DISPLAY"
        ps aux | grep Xvfb || echo "Xvfb not running"
        
        # Run documentation test in headless mode for CI
        echo "🧪 Starting Playwright test..."
        mvn test -Dtest=PersonalCustomerAccountOpeningTutorialTest \
          -Dplaywright.headless=true \
          -Dplaywright.slowmo=1000 \
          -Dplaywright.record=true \
          -Dplaywright.browser=chromium \
          -X || {
            echo "❌ Test failed, checking logs..."
            find target -name "*.log" -type f -exec echo "=== {} ===" \; -exec cat {} \; 2>/dev/null || true
            exit 1
          }
          
    - name: Generate user manual from screenshots and videos
      run: |
        echo "📚 Generating user manual from captured media..."
        mvn exec:java -Dexec.mainClass="id.ac.tazkia.minibank.util.UserManualGenerator"
        
        echo "📂 Copying generated documentation to docs/user-manual..."
        # Create docs/user-manual directory if it doesn't exist
        mkdir -p docs/user-manual
        
        # Copy all generated content from target to docs folder
        if [ -d "target/playwright-documentation" ]; then
            cp -r target/playwright-documentation/* docs/user-manual/
            echo "✅ Documentation successfully copied to docs/user-manual/"
        else
            echo "❌ Error: target/playwright-documentation directory not found"
            exit 1
        fi
        
    - name: Prepare documentation for deployment
      run: |
        echo "📦 Preparing documentation for GitHub Pages..."
        
        # Create pages directory
        mkdir -p pages
        
        # Copy documentation to pages directory
        cp -r docs/user-manual/* pages/
        
        # Create main index.html with delayed redirect and better UX
        cat > pages/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="id">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Aplikasi Minibank - Dokumentasi Pengguna</title>
            <style>
                body { 
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
                    text-align: center; 
                    padding: 20px; 
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    min-height: 100vh;
                    margin: 0;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
                .container {
                    background: rgba(255,255,255,0.1);
                    padding: 40px;
                    border-radius: 15px;
                    backdrop-filter: blur(10px);
                    border: 1px solid rgba(255,255,255,0.2);
                    max-width: 600px;
                    width: 90%;
                }
                h1 { 
                    margin-bottom: 20px; 
                    font-size: 2.5em;
                    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
                }
                p { 
                    font-size: 1.2em; 
                    margin-bottom: 20px;
                }
                .redirect-link {
                    display: inline-block;
                    padding: 15px 30px;
                    background: rgba(255,255,255,0.2);
                    color: white;
                    text-decoration: none;
                    border-radius: 8px;
                    border: 2px solid rgba(255,255,255,0.3);
                    transition: all 0.3s ease;
                    font-weight: bold;
                    margin: 10px;
                }
                .redirect-link:hover {
                    background: rgba(255,255,255,0.3);
                    transform: translateY(-2px);
                    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
                }
                .countdown {
                    font-size: 0.9em;
                    opacity: 0.8;
                    margin-top: 20px;
                }
                #countdown-timer {
                    font-weight: bold;
                    color: #ffeb3b;
                }
        EOF
        
        # Complete the index.html with JavaScript countdown and better content
        cat >> pages/index.html << 'EOF'
                .timestamp { font-size: 0.9em; margin-top: 30px; opacity: 0.8; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>🏦 Aplikasi Minibank</h1>
                <p>Dokumentasi Pengguna - Sistem Perbankan Syariah</p>
                <p>Panduan lengkap untuk Customer Service (CS) dalam proses pembukaan rekening nasabah personal</p>
                
                <a href="panduan-pembukaan-rekening-nasabah-personal.html" class="redirect-link">📚 Buka Panduan Pengguna</a>
                <a href="README.html" class="redirect-link">📋 Lihat Daftar Panduan</a>
                
                <div class="countdown">
                    Otomatis menuju panduan dalam <span id="countdown-timer">10</span> detik
                    <br><small>Klik tombol di atas untuk langsung membuka</small>
                </div>
EOF
        
        # Add timestamp
        echo "                <div class=\"timestamp\">📅 Diperbarui: $(date '+%d %B %Y %H:%M WIB')</div>" >> pages/index.html
        
        # Add JavaScript for countdown
        cat >> pages/index.html << 'EOF'
            </div>
            
            <script>
                let countdown = 10;
                const timer = document.getElementById('countdown-timer');
                
                const interval = setInterval(() => {
                    countdown--;
                    timer.textContent = countdown;
                    
                    if (countdown <= 0) {
                        clearInterval(interval);
                        window.location.href = 'panduan-pembukaan-rekening-nasabah-personal.html';
                    }
                }, 1000);
                
                // Allow users to cancel auto-redirect by interacting with the page
                document.addEventListener('click', () => {
                    clearInterval(interval);
                    timer.parentElement.innerHTML = 'Otomatis redirect dibatalkan - klik tombol untuk navigasi manual';
                });
            </script>
        </body>
        </html>
EOF
        
        # Convert markdown to HTML for better web display with responsive images
        if command -v pandoc > /dev/null; then
            echo "🔄 Converting Markdown to HTML..."
            
            # Create custom CSS for responsive images and better styling
            cat > pages/custom-styles.css << 'CSS_EOF'
/* Custom styles for user manual */
.container { 
    max-width: 1200px; 
    margin: 0 auto; 
    padding: 20px; 
}

/* Responsive images */
img { 
    max-width: 100%; 
    height: auto; 
    margin: 15px 0; 
    border: 2px solid #e9ecef; 
    border-radius: 8px; 
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    display: block;
    margin-left: auto;
    margin-right: auto;
}

/* Limit image width on larger screens */
@media (min-width: 768px) {
    img {
        max-width: 80%;
    }
}

@media (min-width: 992px) {
    img {
        max-width: 70%;
    }
}

/* Better spacing for screenshots */
p:has(img) {
    text-align: center;
    margin: 20px 0;
}

/* Style for code blocks */
pre { 
    background: #f8f9fa; 
    padding: 15px; 
    border-radius: 5px; 
    overflow-x: auto;
    border-left: 4px solid #007bff;
}

code {
    background: #f8f9fa;
    padding: 2px 6px;
    border-radius: 3px;
    font-size: 0.9em;
}

/* Table of contents styling */
.toc { 
    background: #f8f9fa; 
    padding: 20px; 
    border-radius: 5px; 
    margin-bottom: 30px; 
    border: 1px solid #dee2e6;
}

/* Header styling */
h1, h2, h3 {
    color: #495057;
    margin-top: 2rem;
    margin-bottom: 1rem;
}

h1 { border-bottom: 2px solid #007bff; padding-bottom: 0.5rem; }
h2 { border-bottom: 1px solid #dee2e6; padding-bottom: 0.3rem; }

/* Step sections */
h3 {
    background: #e3f2fd;
    padding: 10px 15px;
    border-radius: 5px;
    border-left: 4px solid #2196f3;
}

/* Alert boxes */
blockquote {
    background: #fff3cd;
    border-left: 4px solid #ffc107;
    padding: 15px;
    margin: 20px 0;
    border-radius: 4px;
}

/* Video links */
a[href$=".webm"] {
    display: inline-block;
    padding: 8px 16px;
    background: #28a745;
    color: white;
    text-decoration: none;
    border-radius: 4px;
    margin: 5px 0;
}

a[href$=".webm"]:hover {
    background: #218838;
}
CSS_EOF

            pandoc pages/panduan-pembukaan-rekening-nasabah-personal.md \
              -o pages/panduan-pembukaan-rekening-nasabah-personal.html \
              --standalone \
              --css=https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css \
              --css=custom-styles.css \
              --metadata title="Panduan Pembukaan Rekening Nasabah Personal" \
              --toc \
              --toc-depth=3
        else
            echo "⚠️ Pandoc not available, keeping Markdown format"
            # Create a simple HTML wrapper for the markdown with responsive images
            cat > pages/panduan-pembukaan-rekening-nasabah-personal.html << 'EOF'
        <!DOCTYPE html>
        <html lang="id">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Panduan Pembukaan Rekening Nasabah Personal</title>
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
            <style>
                body { padding: 20px 0; }
                .container { max-width: 1200px; }
                
                /* Responsive images */
                img { 
                    max-width: 100%; 
                    height: auto; 
                    margin: 15px auto; 
                    border: 2px solid #dee2e6; 
                    border-radius: 8px;
                    display: block;
                    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
                }
                
                @media (min-width: 768px) {
                    img { max-width: 80%; }
                }
                
                @media (min-width: 992px) {
                    img { max-width: 70%; }
                }
                
                pre { 
                    background: #f8f9fa; 
                    padding: 15px; 
                    border-radius: 5px; 
                    border-left: 4px solid #007bff;
                }
                
                .toc { 
                    background: #f8f9fa; 
                    padding: 20px; 
                    border-radius: 5px; 
                    margin-bottom: 30px; 
                }
                
                iframe { border: 1px solid #dee2e6; border-radius: 5px; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="alert alert-info" role="alert">
                            <strong>📚 Dokumentasi Aplikasi Minibank</strong><br>
                            Panduan ini dibuat secara otomatis menggunakan Playwright dan GitHub Actions.
                            <a href="README.html" class="alert-link">Lihat daftar panduan lainnya</a>
                        </div>
                        <iframe src="panduan-pembukaan-rekening-nasabah-personal.md" width="100%" height="800" style="border: 1px solid #dee2e6; border-radius: 5px;"></iframe>
                        <div class="mt-3">
                            <a href="panduan-pembukaan-rekening-nasabah-personal.md" class="btn btn-outline-primary" target="_blank">📄 Lihat file Markdown asli</a>
                            <a href="README.html" class="btn btn-outline-secondary" target="_blank">📋 Kembali ke daftar panduan</a>
                        </div>
                    </div>
                </div>
            </div>
        </body>
        </html>
        EOF
        fi
        
        # Create README.html for better web navigation  
        cat > pages/README.html << 'EOF'
        <!DOCTYPE html>
        <html lang="id">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Dokumentasi Pengguna - Aplikasi Minibank</title>
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
        </head>
        <body>
            <div class="container mt-5">
                <div class="row">
                    <div class="col-lg-8 offset-lg-2">
                        <iframe src="README.md" width="100%" height="600" style="border: 1px solid #dee2e6; border-radius: 5px;"></iframe>
                    </div>
                </div>
            </div>
        </body>
        </html>
        EOF
        
        echo "✅ Documentation prepared successfully!"
        
        # Show directory structure for debugging
        echo "📁 Pages directory structure:"
        ls -la pages/
        
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: user-documentation
        path: pages/
        retention-days: 30
        
    - name: Setup GitHub Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: './pages'

  deploy-pages:
    runs-on: ubuntu-latest
    needs: documentation-generation
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
